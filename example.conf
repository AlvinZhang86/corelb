
worker_processes  1;
daemon off;
error_log stderr debug;
events {
	worker_connections 1024;
}

http {
	lua_package_path '/Users/philips/coreos/ngx-etcd/lib/?.lua;;';
	server {
		listen 8080;

		location / {
			set $_url "";
			content_by_lua '
				local etcd = require("etcd")
				local c = etcd.Client:new()
				local o, e = c:set("foobar", "yea, lua!")
				if e ~= nil then
					ngx.say("Error setting key! " .. e.errorCode)
				else
					ngx.say(o.value)
				end
				local o, e = c:get("foobar")
				if e ~= nil then
					ngx.say("Error getting key! " .. e.errorCode)
				else
					ngx.say(o.value)
				end
			';
		}

		location /proxy {
			internal;
			rewrite_by_lua "
			  local req = ngx.req

			  for k,v in pairs(req.get_headers()) do
			    if k ~= 'content-length' then
			      req.clear_header(k)
			    end
			  end

			  if ngx.ctx.headers then
			    for k,v in pairs(ngx.ctx.headers) do
			      req.set_header(k, v)
			    end
			  end
			";

			resolver 8.8.8.8;
			proxy_http_version 1.1;
			proxy_pass $_url;
		}
	}
}
