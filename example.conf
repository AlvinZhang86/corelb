
worker_processes  1;
daemon off;
error_log stderr debug;
events {
	worker_connections 1024;
}

http {
	lua_package_path '/Users/philips/coreos/ngx-etcd/lib/?.lua;;';
	server {
		listen 8080;

		location / {
			set $_url "";
			set $best_upstream "";

			access_by_lua '
				local lb = ngx.shared.lb
				if lb == nil then
					local loadbalancer = require("coreinit/loadbalancer")
					lb = loadbalancer:new{
						etcd="http://192.168.240.151:4001",
						unit="simplehttp.service"
					}
					err = lb:sync()
					if err ~= nil then
						print("Error syncing loadbalancer " .. err.errorCode)
					end
					lb:sync()
					ngx.shared.lb = lb
				end

				-- TODO: don't call etcd on every request
				lb:sync()
				ngx.var.best_upstream = lb:upstream()
			';

			proxy_pass http://$best_upstream;
		}

		location /proxy {
			internal;
			rewrite_by_lua "
			  local req = ngx.req

			  for k,v in pairs(req.get_headers()) do
			    if k ~= 'content-length' then
			      req.clear_header(k)
			    end
			  end

			  if ngx.ctx.headers then
			    for k,v in pairs(ngx.ctx.headers) do
			      req.set_header(k, v)
			    end
			  end
			";

			resolver 8.8.8.8;
			proxy_http_version 1.1;
			proxy_pass $_url;
		}
	}
}
